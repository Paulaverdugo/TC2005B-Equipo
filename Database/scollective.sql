DROP SCHEMA IF EXISTS scollective;
CREATE SCHEMA scollective;
USE scollective;

-- User table 
-- id_user SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT, 
CREATE TABLE USER_INFO (
    user_name VARCHAR(50) NOT NULL,
    user_password VARCHAR(50) NOT NULL,
    email VARCHAR(100) NOT NULL,
    age SMALLINT UNSIGNED NOT NULL,
    PRIMARY KEY (user_name )
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Player types table
CREATE TABLE PLAYER_TYPES (
	id_ptypes SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    name_ptypes VARCHAR(50) NOT NULL,
    life_points SMALLINT UNSIGNED NOT NULL, 
    speed SMALLINT UNSIGNED NOT NULL, 
    PRIMARY KEY (id_ptypes)
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Gadget table
CREATE TABLE GADGET (
	id_gadget SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    gadget_name VARCHAR(50) NOT NULL,
    gadget_description VARCHAR(200) NOT NULL,
    player_type SMALLINT UNSIGNED NOT NULL, 
    PRIMARY KEY (id_gadget),
	CONSTRAINT `fk_GADGET_PLAYERTYPE` FOREIGN KEY (player_type) REFERENCES PLAYER_TYPES(id_ptypes) ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Player table
CREATE TABLE PLAYER (
	id_player SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT, 
    last_connection TIMESTAMP NOT NULL, 
    user_name VARCHAR(50) NOT NULL,
    player_type SMALLINT UNSIGNED NOT NULL,
    PRIMARY KEY (id_player), 
    CONSTRAINT `fk_PLAYER_USERINFO` FOREIGN KEY (user_name) REFERENCES USER_INFO(user_name) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT `fk_PLAYER_GADGET` FOREIGN KEY (player_type) REFERENCES PLAYER_TYPES(id_ptypes) ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Progress table 
CREATE TABLE PROGRESS (
	id_progress SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    user_name VARCHAR(50) NOT NULL,
    level_achieved SMALLINT UNSIGNED NOT NULL,
    player_type SMALLINT UNSIGNED NOT NULL,
    PRIMARY KEY (id_progress), 
    CONSTRAINT `fk_PROGRESS_USERINFO` FOREIGN KEY (user_name) REFERENCES USER_INFO(user_name) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT `fk_PROGRESS_PLAYERTYPES` FOREIGN KEY (player_type) REFERENCES PLAYER_TYPES(id_ptypes) ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Progress gadget table
CREATE TABLE CHOSEN_GADGET (
	id_chgadget SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    progress_id SMALLINT UNSIGNED NOT NULL,
    gadget_id SMALLINT UNSIGNED NOT NULL,
    PRIMARY KEY (id_chgadget), 
    CONSTRAINT `fk_CHOSENGADGET_PROGRESS` FOREIGN KEY (progress_id) REFERENCES PROGRESS(id_progress) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT `fk_CHOSENGADGET_GADGET` FOREIGN KEY (gadget_id) REFERENCES GADGET(id_gadget) ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Wins table 
CREATE TABLE WINS (
	id_wins SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    user_name VARCHAR(50) NOT NULL,
    player_type SMALLINT UNSIGNED NOT NULL,
    PRIMARY KEY (id_wins), 
    CONSTRAINT `fk_WINS_USERINFO` FOREIGN KEY (user_name) REFERENCES USER_INFO(user_name) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT `fk_WINS_PLAYERTYPES` FOREIGN KEY (player_type) REFERENCES PLAYER_TYPES(id_ptypes) ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

-- Deads table 
CREATE TABLE DEADS (
	id_deads SMALLINT UNSIGNED NOT NULL AUTO_INCREMENT,
    user_name VARCHAR(50) NOT NULL,
    player_type SMALLINT UNSIGNED NOT NULL,
    level_dead SMALLINT UNSIGNED NOT NULL,
    PRIMARY KEY (id_deads), 
    CONSTRAINT `fk_DEADS_USERINFO` FOREIGN KEY (user_name) REFERENCES USER_INFO(user_name) ON DELETE RESTRICT ON UPDATE CASCADE,
    CONSTRAINT `fk_DEADS_PLAYERTYPES` FOREIGN KEY (player_type) REFERENCES PLAYER_TYPES(id_ptypes) ON DELETE RESTRICT ON UPDATE CASCADE
)ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

--
-- VIEWS STATISTICS()
--

-- Winner user 
CREATE VIEW WINNER_USER AS 
SELECT user_name, COUNT(user_name) AS user_wins FROM WINS
GROUP BY user_name
LIMIT 3;

-- Winner playertype 
CREATE VIEW WINNER_PLAYERTYPE AS 
SELECT PLAYER_TYPES.name_ptypes, COUNT(WINS.player_type) AS player_type_wins FROM WINS
INNER JOIN PLAYER_TYPES ON WINS.player_type = PLAYER_TYPES.id_ptypes
GROUP BY WINS.player_type
ORDER BY player_type_wins DESC;

-- Average age player
CREATE VIEW PLAYER_AGE AS
SELECT ROUND(AVG(age)) FROM USER_INFO AS average_age;

-- The most chosen gadget
CREATE VIEW MOST_GADGET AS
SELECT gadget_name, COUNT(gadget_id) AS most_gadget FROM CHOSEN_GADGET
INNER JOIN GADGET ON CHOSEN_GADGET.gadget_id = GADGET.id_gadget
GROUP BY gadget_id
ORDER BY most_gadget DESC
LIMIT 3;

--
-- VIEWS FOR GET()
--

-- USER LOGIN
CREATE VIEW GETUSER AS
SELECT user_name, user_password FROM USER_INFO;






